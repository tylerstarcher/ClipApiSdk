/*
 * Hue CLIP API
 *
 * See [openhue/openhue-api](https://github.com/openhue/openhue-api)
 *
 * The version of the OpenAPI document: v2
 * Contact: contact@openhue.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using clipapisdk.Client;
using clipapisdk.Api;
// uncomment below to import models
//using clipapisdk.Model;

namespace clipapisdk.Test.Api
{
    /// <summary>
    ///  Class for testing RoomApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class RoomApiTests : IDisposable
    {
        private RoomApi instance;

        public RoomApiTests()
        {
            instance = new RoomApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RoomApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' RoomApi
            //Assert.IsType<RoomApi>(instance);
        }

        /// <summary>
        /// Test CreateRoom
        /// </summary>
        [Fact]
        public void CreateRoomTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RoomPut? roomPut = null;
            //var response = instance.CreateRoom(roomPut);
            //Assert.IsType<UpdateDevice200Response>(response);
        }

        /// <summary>
        /// Test DeleteRoom
        /// </summary>
        [Fact]
        public void DeleteRoomTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roomId = null;
            //var response = instance.DeleteRoom(roomId);
            //Assert.IsType<UpdateDevice200Response>(response);
        }

        /// <summary>
        /// Test GetRoom
        /// </summary>
        [Fact]
        public void GetRoomTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roomId = null;
            //var response = instance.GetRoom(roomId);
            //Assert.IsType<GetRooms200Response>(response);
        }

        /// <summary>
        /// Test GetRooms
        /// </summary>
        [Fact]
        public void GetRoomsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetRooms();
            //Assert.IsType<GetRooms200Response>(response);
        }

        /// <summary>
        /// Test UpdateRoom
        /// </summary>
        [Fact]
        public void UpdateRoomTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roomId = null;
            //RoomPut? roomPut = null;
            //var response = instance.UpdateRoom(roomId, roomPut);
            //Assert.IsType<UpdateDevice200Response>(response);
        }
    }
}

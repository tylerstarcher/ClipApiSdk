/*
 * Hue CLIP API
 *
 * See [openhue/openhue-api](https://github.com/openhue/openhue-api)
 *
 * The version of the OpenAPI document: v2
 * Contact: contact@openhue.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = clipapisdk.Client.OpenAPIDateConverter;

namespace clipapisdk.Model
{
    /// <summary>
    /// MotionGetAllOfMotionMotionReport
    /// </summary>
    [DataContract(Name = "MotionGet_allOf_motion_motion_report")]
    public partial class MotionGetAllOfMotionMotionReport : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MotionGetAllOfMotionMotionReport" /> class.
        /// </summary>
        /// <param name="changed">last time the value of this property is changed.</param>
        /// <param name="motion">true if motion is detected.</param>
        public MotionGetAllOfMotionMotionReport(string changed = default(string), bool motion = default(bool))
        {
            this.Changed = changed;
            this.Motion = motion;
        }

        /// <summary>
        /// last time the value of this property is changed
        /// </summary>
        /// <value>last time the value of this property is changed</value>
        [DataMember(Name = "changed", EmitDefaultValue = false)]
        public string Changed { get; set; }

        /// <summary>
        /// true if motion is detected
        /// </summary>
        /// <value>true if motion is detected</value>
        [DataMember(Name = "motion", EmitDefaultValue = true)]
        public bool Motion { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MotionGetAllOfMotionMotionReport {\n");
            sb.Append("  Changed: ").Append(Changed).Append("\n");
            sb.Append("  Motion: ").Append(Motion).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

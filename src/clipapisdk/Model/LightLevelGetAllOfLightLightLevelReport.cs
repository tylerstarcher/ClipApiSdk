/*
 * Hue CLIP API
 *
 * See [openhue/openhue-api](https://github.com/openhue/openhue-api)
 *
 * The version of the OpenAPI document: v2
 * Contact: contact@openhue.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = clipapisdk.Client.OpenAPIDateConverter;

namespace clipapisdk.Model
{
    /// <summary>
    /// LightLevelGetAllOfLightLightLevelReport
    /// </summary>
    [DataContract(Name = "LightLevelGet_allOf_light_light_level_report")]
    public partial class LightLevelGetAllOfLightLightLevelReport : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LightLevelGetAllOfLightLightLevelReport" /> class.
        /// </summary>
        /// <param name="changed">last time the value of this property is changed..</param>
        /// <param name="lightLevel">Light level in 10000*log10(lux) +1 measured by sensor. Logarithmic scale used because the human eye adjusts to light levels and small changes at low lux levels are more noticeable than at high lux levels. This allows use of linear scale configuration sliders. .</param>
        public LightLevelGetAllOfLightLightLevelReport(DateTime changed = default(DateTime), int lightLevel = default(int))
        {
            this.Changed = changed;
            this.LightLevel = lightLevel;
        }

        /// <summary>
        /// last time the value of this property is changed.
        /// </summary>
        /// <value>last time the value of this property is changed.</value>
        [DataMember(Name = "changed", EmitDefaultValue = false)]
        public DateTime Changed { get; set; }

        /// <summary>
        /// Light level in 10000*log10(lux) +1 measured by sensor. Logarithmic scale used because the human eye adjusts to light levels and small changes at low lux levels are more noticeable than at high lux levels. This allows use of linear scale configuration sliders. 
        /// </summary>
        /// <value>Light level in 10000*log10(lux) +1 measured by sensor. Logarithmic scale used because the human eye adjusts to light levels and small changes at low lux levels are more noticeable than at high lux levels. This allows use of linear scale configuration sliders. </value>
        [DataMember(Name = "light_level", EmitDefaultValue = false)]
        public int LightLevel { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class LightLevelGetAllOfLightLightLevelReport {\n");
            sb.Append("  Changed: ").Append(Changed).Append("\n");
            sb.Append("  LightLevel: ").Append(LightLevel).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

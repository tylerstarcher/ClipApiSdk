openapi: 3.0.3
info:
  contact:
    email: contact@openhue.io
    name: OpenHue
    url: https://www.openhue.io
  description: "See [openhue/openhue-api](https://github.com/openhue/openhue-api)"
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: Hue CLIP API
  version: v2
servers:
- description: Your Home Bridge
  url: "https://{bridgeInternalIPAddress}"
  variables:
    bridgeInternalIPAddress:
      default: 192.168.1.0
      description: |
        Use the broker server discover process by visiting https://discovery.meethue.com
        to discover the IP address of the bridge on your network
tags:
- description: Authentication operations.
  name: Auth
- description: API to retrieve all API resources
  name: Resource
- description: API to manage devices. Devices have device level properties and offer
    services such as light. Bridge device cannot be deleted.
  name: Device
- description: API to manage device power services. These are offered by battery powered
    devices. The update endpoint (e.g. `PUT`) was intentionally not implemented.
  name: Device Power
- description: API to manage light services. These are offered by devices with lighting
    capabilities.
  name: Light
- description: API to manage light level services. These are offered by devices with
    light level sensing capabilities.
  name: LightLevel
- description: API to manage motion services. These are offered by devices with motion
    sensing capabilities.
  name: Motion
- description: "API to manage grouped light services. These are offered by rooms,\
    \ zones, and homes."
  name: GroupedLight
- description: API to manage the bridge
  name: Bridge
- description: API to manage bridge homes. Homes group rooms as well as devices not
    assigned to a room.
  name: Bridge Home
- description: API to manage scenes. Scenes are used to store and recall settings
    for a group of lights.
  name: Scene
- description: API to manage rooms. Rooms group devices and each device can only be
    part of one room.
  name: Room
- description: API to manage zones. Zones group services and each service can be part
    of multiple zones.
  name: Zone
- description: API to manage temperature services. These are offered by devices with
    temperature sensing capabilities.
  name: Temperature
paths:
  /api:
    post:
      description: Authenticate to retrieve the HUE application key. Requires to go
        and press the button on the bridge
      operationId: authenticate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authenticate_request'
      responses:
        "200":
          content:
            application/json:
              examples:
                Success:
                  value:
                  - success:
                      username: a4e08834-0893-4013-b646-738582ec15c9
                      clientkey: 8c7f2f7e-efb5-4b89-9b54-aac797040ea4
                Error:
                  value:
                  - error:
                      type: 101
                      address: ""
                      description: link button not pressed
              schema:
                $ref: '#/components/schemas/response'
          description: Authentication Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
      summary: Authenticate
      tags:
      - Auth
  /clip/v2/resource:
    get:
      description: API to retrieve all API resources
      operationId: getResources
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getResources_200_response'
          description: Resource Success Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: List resources
      tags:
      - Resource
  /clip/v2/resource/device:
    get:
      description: List all available devices
      operationId: getDevices
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDevices_200_response'
          description: Device Success Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: List devices
      tags:
      - Device
  /clip/v2/resource/device/{deviceId}:
    delete:
      description: "Delete a single Device from its given `{deviceId}`. The `bridge`\
        \ device cannot be deleted."
      operationId: deleteDevice
      parameters:
      - description: ID of the Device
        explode: false
        in: path
        name: deviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateDevice_200_response'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Delete Device
      tags:
      - Device
    get:
      description: "Get details of a single device from its given `{deviceId}`."
      operationId: getDevice
      parameters:
      - description: ID of the device
        explode: false
        in: path
        name: deviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDevices_200_response'
          description: Device Success Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Get device
      tags:
      - Device
    put:
      description: "Update a single device from its given `{deviceId}`."
      operationId: updateDevice
      parameters:
      - description: ID of the device
        explode: false
        in: path
        name: deviceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Identify:
                summary: Triggers the identification sequence
                value:
                  identify:
                    action: identify
            schema:
              $ref: '#/components/schemas/DevicePut'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateDevice_200_response'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Update device
      tags:
      - Device
  /clip/v2/resource/device_power:
    get:
      description: List all available device powers
      operationId: getDevicePowers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDevicePowers_200_response'
          description: Device Power Success Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: List device powers
      tags:
      - Device Power
  /clip/v2/resource/device_power/{deviceId}:
    get:
      description: "Get power details of a single device from its given `{deviceId}`."
      operationId: getDevicePower
      parameters:
      - description: ID of the device
        explode: false
        in: path
        name: deviceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDevicePowers_200_response'
          description: Device Success Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Get device power
      tags:
      - Device Power
  /clip/v2/resource/light:
    get:
      description: List all available lights.
      operationId: getLights
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getLights_200_response'
          description: Light Success Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: List lights.
      tags:
      - Light
  /clip/v2/resource/light/{lightId}:
    get:
      description: "Get details of a single light from its given `{lightId}`."
      operationId: getLight
      parameters:
      - description: ID of the light
        explode: false
        in: path
        name: lightId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getLights_200_response'
          description: Light Success Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Get light
      tags:
      - Light
    put:
      description: "Update a single light from its given `{lightId}`."
      operationId: updateLight
      parameters:
      - description: ID of the light
        explode: false
        in: path
        name: lightId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              TurnOn:
                summary: Turn the light on.
                value:
                  "on":
                    "on": true
            schema:
              $ref: '#/components/schemas/LightPut'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateDevice_200_response'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Update light
      tags:
      - Light
  /clip/v2/resource/light_level:
    get:
      description: List all available light levels.
      operationId: getLightLevels
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getLightLevels_200_response'
          description: Light Level Success Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: List light levels.
      tags:
      - LightLevel
  /clip/v2/resource/light_level/{lightId}:
    get:
      description: "Get details of a single light from its given `{lightId}`."
      operationId: getLightLevel
      parameters:
      - description: ID of the light
        explode: false
        in: path
        name: lightId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getLightLevels_200_response'
          description: Light Level Success Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Get light
      tags:
      - LightLevel
    put:
      description: "Update a single light from its given `{lightId}`."
      operationId: updateLightLevel
      parameters:
      - description: ID of the light
        explode: false
        in: path
        name: lightId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Enable:
                summary: Enable light level.
                value:
                  enabled: true
            schema:
              $ref: '#/components/schemas/LightLevelPut'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateDevice_200_response'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Update light
      tags:
      - LightLevel
  /clip/v2/resource/motion:
    get:
      description: List all available motion sensors.
      operationId: getMotionSensors
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMotionSensors_200_response'
          description: Motion Success Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: List motion sensors.
      tags:
      - Motion
  /clip/v2/resource/motion/{motionId}:
    get:
      description: "Get details of a single motion sensor from its given `{motionId}`."
      operationId: getMotionSensor
      parameters:
      - description: ID of the motion sensor
        explode: false
        in: path
        name: motionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMotionSensors_200_response'
          description: Motion Success Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Get motion sensor.
      tags:
      - Motion
    put:
      description: "Update a single motion sensor from its given `{motionId}`."
      operationId: updateMotionSensor
      parameters:
      - description: Id of the motion sensor
        explode: false
        in: path
        name: motionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              TurnOn:
                summary: Turn the motion sensor on.
                value:
                  enabled: true
            schema:
              $ref: '#/components/schemas/MotionPut'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateDevice_200_response'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Update Motion Sensor
      tags:
      - Motion
  /clip/v2/resource/grouped_light:
    get:
      description: List all grouped lights
      operationId: getGroupedLights
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getGroupedLights_200_response'
          description: Grouped Light Success Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: List grouped lights
      tags:
      - GroupedLight
  /clip/v2/resource/grouped_light/{groupedLightId}:
    get:
      description: "Get details of a single grouped light from its given `{groupedLightId}`."
      operationId: getGroupedLight
      parameters:
      - description: ID of the grouped light
        explode: false
        in: path
        name: groupedLightId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getGroupedLights_200_response'
          description: Grouped Light Success Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Get grouped light
      tags:
      - GroupedLight
    put:
      description: "Update a single grouped light from its given `{groupedLightId}`."
      operationId: updateGroupedLight
      parameters:
      - description: ID of the light
        explode: false
        in: path
        name: groupedLightId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              SetOn:
                summary: Set light group on
                value:
                  "on":
                    "on": true
            schema:
              $ref: '#/components/schemas/GroupedLightPut'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateDevice_200_response'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Update grouped light
      tags:
      - GroupedLight
  /clip/v2/resource/bridge:
    get:
      description: List all available bridges
      operationId: getBridges
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getBridges_200_response'
          description: Bridge Success Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: List bridges
      tags:
      - Bridge
  /clip/v2/resource/bridge/{bridgeId}:
    get:
      description: "Get details of a single bridge from its given `{bridgeId}`."
      operationId: getBridge
      parameters:
      - description: ID of the bridge
        explode: false
        in: path
        name: bridgeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getBridges_200_response'
          description: Bridge Success Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Get bridge
      tags:
      - Bridge
    put:
      description: "Update a single bridge from its given `{bridgeId}`."
      operationId: updateBridge
      parameters:
      - description: ID of the bridge
        explode: false
        in: path
        name: bridgeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BridgePut'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateDevice_200_response'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Update bridge
      tags:
      - Bridge
  /clip/v2/resource/bridge_home:
    get:
      description: List all available bridge homes.
      operationId: getBridgeHomes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getBridgeHomes_200_response'
          description: Bridge Home Success Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: List bridge homes.
      tags:
      - Bridge Home
  /clip/v2/resource/bridge_home/{bridgeHomeId}:
    get:
      description: "Get details of a single bridge home from its given `{bridgeHomeId}`."
      operationId: getBridgeHome
      parameters:
      - description: ID of the bridge home.
        explode: false
        in: path
        name: bridgeHomeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getBridgeHomes_200_response'
          description: Bridge Home Success Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Get bridge home.
      tags:
      - Bridge Home
  /clip/v2/resource/scene:
    get:
      description: List all available scenes
      operationId: getScenes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getScenes_200_response'
          description: Scene Success Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: List scenes
      tags:
      - Scene
    post:
      description: Creates a new scene
      operationId: createScene
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenePost'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateDevice_200_response'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Create a new scene
      tags:
      - Scene
  /clip/v2/resource/scene/{sceneId}:
    delete:
      description: "Delete a single scene from its given `{sceneId}`"
      operationId: deleteScene
      parameters:
      - description: ID of the scene.
        explode: false
        in: path
        name: sceneId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateDevice_200_response'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Delete a scene
      tags:
      - Scene
    get:
      description: "Get details of a single scene from its given `{sceneId}`"
      operationId: getScene
      parameters:
      - description: ID of the scene.
        explode: false
        in: path
        name: sceneId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getScenes_200_response'
          description: Scene Success Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Get a scene
      tags:
      - Scene
    put:
      description: "Update a single scene from its given `{sceneId}`"
      operationId: updateScene
      parameters:
      - description: ID of the scene.
        explode: false
        in: path
        name: sceneId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenePut'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateDevice_200_response'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Update a scene
      tags:
      - Scene
  /clip/v2/resource/room:
    get:
      description: List all available rooms
      operationId: getRooms
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRooms_200_response'
          description: Room Success Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: List rooms
      tags:
      - Room
    post:
      description: Create a new room
      operationId: createRoom
      requestBody:
        content:
          application/json:
            examples:
              NewTvRoom:
                summary: Create a new TV Room
                value:
                  children:
                  - rid: 00afc7d2-bae5-4613-8cd8-5ba0d064a572
                    rtype: light
                  metadata:
                    name: TV Room
                    archetype: tv
            schema:
              $ref: '#/components/schemas/RoomPut'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateDevice_200_response'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Create room
      tags:
      - Room
  /clip/v2/resource/room/{roomId}:
    delete:
      description: "Delete a single room from its given `{roomId}`"
      operationId: deleteRoom
      parameters:
      - description: ID of the room
        explode: false
        in: path
        name: roomId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateDevice_200_response'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Delete room
      tags:
      - Room
    get:
      description: "Get details of a single room from its given `{roomId}`"
      operationId: getRoom
      parameters:
      - description: ID of the room
        explode: false
        in: path
        name: roomId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRooms_200_response'
          description: Room Success Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Get room.
      tags:
      - Room
    put:
      description: "Update a single room from its given `{roomId}`"
      operationId: updateRoom
      parameters:
      - description: ID of the room
        explode: false
        in: path
        name: roomId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomPut'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateDevice_200_response'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Update room
      tags:
      - Room
  /clip/v2/resource/zone:
    get:
      description: List all available zones
      operationId: getZones
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRooms_200_response'
          description: Zone Success Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: List zones
      tags:
      - Zone
    post:
      description: Create a new zone
      operationId: createZone
      requestBody:
        content:
          application/json:
            examples:
              NewTvZone:
                summary: Create a new TV Zone
                value:
                  children:
                  - rid: 00afc7d2-bae5-4613-8cd8-5ba0d064a572
                    rtype: light
                  metadata:
                    name: TV Zone
                    archetype: tv
            schema:
              $ref: '#/components/schemas/RoomPut'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateDevice_200_response'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Create zone
      tags:
      - Zone
  /clip/v2/resource/zone/{zoneId}:
    delete:
      description: "Delete a single Zone from its given `{zoneId}`"
      operationId: deleteZone
      parameters:
      - description: ID of the Zone
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateDevice_200_response'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Delete Zone
      tags:
      - Zone
    get:
      description: "Get details of a single Zone from its given `{zoneId}`"
      operationId: getZone
      parameters:
      - description: ID of the Zone
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRooms_200_response'
          description: Zone Success Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Get Zone.
      tags:
      - Zone
    put:
      description: "Update a single Zone from its given `{zoneId}`"
      operationId: updateZone
      parameters:
      - description: ID of the Zone
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomPut'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateDevice_200_response'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Update Zone
      tags:
      - Zone
  /clip/v2/resource/temperature:
    get:
      description: List all temperatures
      operationId: getTemperatures
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTemperatures_200_response'
          description: Temperature Success Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: List temperatures
      tags:
      - Temperature
  /clip/v2/resource/temperature/{temperatureId}:
    get:
      description: "Get details of a single temperature sensor from its given `{temperatureId}`."
      operationId: getTemperature
      parameters:
      - description: ID of the temperature sensor
        explode: false
        in: path
        name: temperatureId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTemperatures_200_response'
          description: Temperature Success Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Get temperature sensor information
      tags:
      - Temperature
    put:
      description: "Update a temperature sensor from its given `{temperatureId}`."
      operationId: updateTemperature
      parameters:
      - description: ID of the temperature sensor
        explode: false
        in: path
        name: temperatureId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Enable:
                summary: Enable temperature sensor
                value:
                  enabled: true
              Disable:
                summary: Disable temperature sensor
                value:
                  enabled: false
            schema:
              $ref: '#/components/schemas/TemperaturePut'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateDevice_200_response'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service Unavailable
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Insufficient Storage
      security:
      - HueApplicationKey: []
      summary: Update temperature sensor
      tags:
      - Temperature
components:
  responses:
    Unauthorized:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Unauthorized
    Forbidden:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Forbidden
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Not Found
    MethodNotAllowed:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Method Not Allowed
    NotAcceptable:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Not Acceptable
    Conflict:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Conflict
    TooManyRequests:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Too Many Requests
    InternalServerError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Internal Server Error
    ServiceUnavailable:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Service Unavailable
    InsufficientStorage:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Insufficient Storage
  schemas:
    response:
      items:
        $ref: '#/components/schemas/response_inner'
      maxItems: 1
      minItems: 1
      type: array
    Error:
      example:
        description: description
      properties:
        description:
          description: a human-readable explanation specific to this occurrence of
            the problem.
          type: string
      type: object
    ErrorResponse:
      example:
        errors:
        - description: description
        - description: description
      properties:
        errors:
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
    Resource:
      description: Common resource properties
      properties:
        type:
          description: Type of the supported resources
          example: light
          type: string
        id:
          description: Unique identifier representing a specific resource instance
          example: 3883f8bf-30a3-445b-ac06-b047d50599df
          pattern: "^[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}$"
          type: string
        id_v1:
          description: Clip v1 resource identifier
          example: /lights/8
          pattern: "^(\\/[a-z]{4,32}\\/[0-9a-zA-Z-]{1,32})?$"
          type: string
      type: object
    ResourceIdentifier:
      example:
        rtype: device
        rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
      properties:
        rid:
          description: The unique id of the referenced resource
          example: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          pattern: "^[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}$"
          type: string
        rtype:
          description: The type of the referenced resource
          enum:
          - device
          - bridge_home
          - room
          - zone
          - light
          - button
          - relative_rotary
          - temperature
          - light_level
          - motion
          - camera_motion
          - entertainment
          - contact
          - tamper
          - grouped_light
          - device_power
          - zigbee_bridge_connectivity
          - zigbee_connectivity
          - zgp_connectivity
          - bridge
          - zigbee_device_discovery
          - homekit
          - matter
          - matter_fabric
          - scene
          - entertainment_configuration
          - public_image
          - auth_v1
          - behavior_script
          - behavior_instance
          - geofence
          - geofence_client
          - geolocation
          - smart_scene
          type: string
      type: object
    ResourceOwned:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - properties:
          owner:
            $ref: '#/components/schemas/ResourceIdentifier'
        type: object
      description: Common resource properties including the owner
      type: object
    ResourceGet:
      allOf:
      - $ref: '#/components/schemas/ResourceOwned'
      - properties:
          type:
            description: Type of the supported resources
            enum:
            - device
            - bridge_home
            - room
            - zone
            - light
            - button
            - relative_rotary
            - temperature
            - light_level
            - motion
            - camera_motion
            - entertainment
            - contact
            - tamper
            - grouped_light
            - device_power
            - zigbee_bridge_connectivity
            - zigbee_connectivity
            - zgp_connectivity
            - bridge
            - zigbee_device_discovery
            - homekit
            - matter
            - matter_fabric
            - scene
            - entertainment_configuration
            - public_image
            - auth_v1
            - behavior_script
            - behavior_instance
            - geofence
            - geofence_client
            - geolocation
            - smart_scene
            example: light
            type: string
        type: object
      description: |
        The API is actually returning the full resource description depending on the type, not just the fields that are
        documented below.
      example:
        owner:
          rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        id_v1: /lights/8
        id: 3883f8bf-30a3-445b-ac06-b047d50599df
        type: light
      type: object
    ApiResponse:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/Error'
          type: array
        data:
          items:
            type: object
          type: array
      type: object
    ProductArchetype:
      description: The default archetype given by manufacturer. Can be changed by
        user.
      enum:
      - bridge_v2
      - unknown_archetype
      - classic_bulb
      - sultan_bulb
      - flood_bulb
      - spot_bulb
      - candle_bulb
      - luster_bulb
      - pendant_round
      - pendant_long
      - ceiling_round
      - ceiling_square
      - floor_shade
      - floor_lantern
      - table_shade
      - recessed_ceiling
      - recessed_floor
      - single_spot
      - double_spot
      - table_wash
      - wall_lantern
      - wall_shade
      - flexible_lamp
      - ground_spot
      - wall_spot
      - plug
      - hue_go
      - hue_lightstrip
      - hue_iris
      - hue_bloom
      - bollard
      - wall_washer
      - hue_play
      - vintage_bulb
      - vintage_candle_bulb
      - ellipse_bulb
      - triangle_bulb
      - small_globe_bulb
      - large_globe_bulb
      - edison_bulb
      - christmas_tree
      - string_light
      - hue_centris
      - hue_lightstrip_tv
      - hue_lightstrip_pc
      - hue_tube
      - hue_signe
      - pendant_spot
      - ceiling_horizontal
      - ceiling_tube
      example: hue_go
      type: string
    ProductData:
      example:
        product_archetype: hue_go
        hardware_platform_type: 100b-120
        certified: true
        model_id: 7602031P7
        manufacturer_name: Signify Netherlands B.V.
        software_version: 1.104.3
        product_name: Hue Go
      properties:
        model_id:
          description: Unique identification of device model
          example: 7602031P7
          type: string
        manufacturer_name:
          description: Name of device manufacturer
          example: Signify Netherlands B.V.
          type: string
        product_name:
          description: Name of the product
          example: Hue Go
          type: string
        product_archetype:
          $ref: '#/components/schemas/ProductArchetype'
        certified:
          description: This device is Hue certified
          type: boolean
        software_version:
          description: Software version of the product
          example: 1.104.3
          pattern: \d+\.\d+\.\d+
          type: string
        hardware_platform_type:
          description: Hardware type; identified by Manufacturer code and ImageType
          example: 100b-120
          type: string
      type: object
    DeviceGet:
      allOf:
      - $ref: '#/components/schemas/ResourceOwned'
      - properties:
          type:
            enum:
            - device
            type: string
          product_data:
            $ref: '#/components/schemas/ProductData'
          metadata:
            $ref: '#/components/schemas/DeviceGet_allOf_metadata'
          usertest:
            $ref: '#/components/schemas/DeviceGet_allOf_usertest'
          services:
            description: References all services providing control and state of the
              device.
            items:
              $ref: '#/components/schemas/ResourceIdentifier'
            type: array
        type: object
      description: Definition of a device resource
      example:
        owner:
          rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        usertest:
          usertest: true
          status: set
        metadata:
          archetype: hue_go
          name: name
        id_v1: /lights/8
        id: 3883f8bf-30a3-445b-ac06-b047d50599df
        product_data:
          product_archetype: hue_go
          hardware_platform_type: 100b-120
          certified: true
          model_id: 7602031P7
          manufacturer_name: Signify Netherlands B.V.
          software_version: 1.104.3
          product_name: Hue Go
        services:
        - rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        - rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        type: device
      type: object
    DevicePut:
      example:
        usertest:
          usertest: true
        metadata:
          archetype: hue_go
          name: name
        identify:
          action: identify
        type: device
      properties:
        type:
          enum:
          - device
          type: string
        metadata:
          $ref: '#/components/schemas/DeviceGet_allOf_metadata'
        identify:
          $ref: '#/components/schemas/DevicePut_identify'
        usertest:
          $ref: '#/components/schemas/DevicePut_usertest'
      type: object
    DevicePowerGet:
      allOf:
      - $ref: '#/components/schemas/ResourceOwned'
      - properties:
          power_state:
            $ref: '#/components/schemas/DevicePowerGet_allOf_power_state'
        type: object
      description: Definition of a bridge power resource
      example:
        owner:
          rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        id_v1: /lights/8
        id: 3883f8bf-30a3-445b-ac06-b047d50599df
        type: light
        power_state:
          battery_state: normal
          battery_level: 8
      type: object
    LightArchetype:
      description: Light archetype
      enum:
      - unknown_archetype
      - classic_bulb
      - sultan_bulb
      - flood_bulb
      - spot_bulb
      - candle_bulb
      - luster_bulb
      - pendant_round
      - pendant_long
      - ceiling_round
      - ceiling_square
      - floor_shade
      - floor_lantern
      - table_shade
      - recessed_ceiling
      - recessed_floor
      - single_spot
      - double_spot
      - table_wash
      - wall_lantern
      - wall_shade
      - flexible_lamp
      - ground_spot
      - wall_spot
      - plug
      - hue_go
      - hue_lightstrip
      - hue_iris
      - hue_bloom
      - bollard
      - wall_washer
      - hue_play
      - vintage_bulb
      - vintage_candle_bulb
      - ellipse_bulb
      - triangle_bulb
      - small_globe_bulb
      - large_globe_bulb
      - edison_bulb
      - christmas_tree
      - string_light
      - hue_centris
      - hue_lightstrip_tv
      - hue_lightstrip_pc
      - hue_tube
      - hue_signe
      - pendant_spot
      - ceiling_horizontal
      - ceiling_tube
      example: classic_bulb
      type: string
    "On":
      example:
        "on": true
      properties:
        "on":
          description: "On/Off state of the light on=true, off=false"
          type: boolean
      type: object
    Brightness:
      description: "Brightness percentage. value cannot be 0, writing 0 changes it\
        \ to lowest possible brightness"
      maximum: 100
      minimum: 0
      type: number
    GamutPosition:
      description: CIE XY gamut position
      example:
        x: 0.7061401241503109
        "y": 0.9301444243932576
      properties:
        x:
          description: X position in color gamut
          maximum: 1
          minimum: 0
          type: number
        "y":
          description: y position in color gamut
          maximum: 1
          minimum: 0
          type: number
      type: object
    SupportedDynamicStatus:
      description: Current status of the lamp with dynamics.
      enum:
      - dynamic_palette
      - none
      type: string
    SupportedSignals:
      description: Indicates which signal is currently active.
      enum:
      - no_signal
      - on_off
      - on_off_color
      - alternating
      type: string
    Color:
      example:
        xy:
          x: 0.7061401241503109
          "y": 0.9301444243932576
      properties:
        xy:
          $ref: '#/components/schemas/GamutPosition'
      type: object
    SupportedGradientMode:
      description: Mode in which the points are currently being deployed. If not provided
        during PUT/POST it will be defaulted to interpolated_palette
      enum:
      - interpolated_palette
      - interpolated_palette_mirrored
      - random_pixelated
      type: string
    Gradient:
      description: Basic feature containing gradient properties.
      example:
        mode: interpolated_palette
        points:
        - xy:
            x: 0.7061401241503109
            "y": 0.9301444243932576
        - xy:
            x: 0.7061401241503109
            "y": 0.9301444243932576
        - xy:
            x: 0.7061401241503109
            "y": 0.9301444243932576
        - xy:
            x: 0.7061401241503109
            "y": 0.9301444243932576
        - xy:
            x: 0.7061401241503109
            "y": 0.9301444243932576
      properties:
        points:
          description: Collection of gradients points. For control of the gradient
            points through a PUT a minimum of 2 points need to be provided.
          items:
            $ref: '#/components/schemas/Color'
          maxItems: 5
          type: array
        mode:
          $ref: '#/components/schemas/SupportedGradientMode'
      type: object
    SupportedEffects:
      enum:
      - prism
      - opal
      - glisten
      - sparkle
      - fire
      - candle
      - no_effect
      type: string
    SupportedTimedEffects:
      description: Current status values the light is in regarding timed effects
      enum:
      - sunrise
      - no_effect
      type: string
    Dimming:
      example:
        brightness: 73.86281948385884
      properties:
        brightness:
          description: "Brightness percentage. value cannot be 0, writing 0 changes\
            \ it to lowest possible brightness"
          maximum: 100
          minimum: 0
          type: number
      type: object
    Mirek:
      description: color temperature in mirek or null when the light color is not
        in the ct spectrum
      maximum: 500
      minimum: 153
      type: integer
    LightGet:
      allOf:
      - $ref: '#/components/schemas/ResourceOwned'
      - properties:
          metadata:
            $ref: '#/components/schemas/LightGet_allOf_metadata'
          "on":
            $ref: '#/components/schemas/On'
          dimming:
            $ref: '#/components/schemas/LightGet_allOf_dimming'
          color_temperature:
            $ref: '#/components/schemas/LightGet_allOf_color_temperature'
          color:
            $ref: '#/components/schemas/LightGet_allOf_color'
          dynamics:
            $ref: '#/components/schemas/LightGet_allOf_dynamics'
          alert:
            $ref: '#/components/schemas/LightGet_allOf_alert'
          signaling:
            $ref: '#/components/schemas/LightGet_allOf_signaling'
          mode:
            enum:
            - normal
            - streaming
            type: string
          gradient:
            $ref: '#/components/schemas/LightGet_allOf_gradient'
          effects:
            $ref: '#/components/schemas/LightGet_allOf_effects'
          timed_effects:
            $ref: '#/components/schemas/LightGet_allOf_timed_effects'
          powerup:
            $ref: '#/components/schemas/LightGet_allOf_powerup'
        type: object
      example:
        owner:
          rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        powerup:
          configured: true
          dimming:
            mode: dimming
            dimming:
              brightness: 73.86281948385884
            color:
              mode: color_temperature
              color_temperature:
                color:
                  xy:
                    x: 0.7061401241503109
                    "y": 0.9301444243932576
                mirek: 195
          preset: safety
          "on":
            mode: "on"
            "on":
              "on": true
        metadata:
          archetype: classic_bulb
          name: name
          fixed_mired: 8
        signaling:
          signal_values:
          - no_signal
          - no_signal
          estimated_end: 2
          colors:
          - xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
          - xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
        color:
          gamut_type: A
          xy:
            x: 0.7061401241503109
            "y": 0.9301444243932576
          gamut:
            red:
              x: 0.7061401241503109
              "y": 0.9301444243932576
            green:
              x: 0.7061401241503109
              "y": 0.9301444243932576
            blue:
              x: 0.7061401241503109
              "y": 0.9301444243932576
        color_temperature:
          mirek_schema:
            mirek_maximum: 232
            mirek_minimum: 348
          mirek_valid: true
          mirek: 359
        gradient: null
        id_v1: /lights/8
        timed_effects:
          duration: 4
          status_values:
          - null
          - null
          effect: sunrise
          effect_values:
          - null
          - null
          status: null
        type: light
        mode: normal
        dimming:
          brightness: 60.27456183070403
          min_dim_level: 14.658129805029452
        dynamics:
          status_values:
          - null
          - null
          speed_valid: true
          speed: 0.0
          status: dynamic_palette
        effects:
          status_values:
          - null
          - null
          effect: null
          effect_values:
          - null
          - null
          status: prism
        alert: null
        id: 3883f8bf-30a3-445b-ac06-b047d50599df
        "on":
          "on": true
      type: object
    DimmingDelta:
      example:
        action: up
        brightness_delta: 8.008281904610115
      properties:
        action:
          enum:
          - up
          - down
          - stop
          type: string
        brightness_delta:
          description: |
            Brightness percentage of full-scale increase delta to current dimlevel. Clip at Max-level or Min-level.
          maximum: 100
          minimum: 0
          type: number
      type: object
    ColorTemperature:
      example:
        mirek: 362
      properties:
        mirek:
          description: color temperature in mirek or null when the light color is
            not in the ct spectrum
          maximum: 500
          minimum: 153
          type: integer
      type: object
    ColorTemperatureDelta:
      example:
        mirek_delta: 50
        action: up
      properties:
        action:
          enum:
          - up
          - down
          - stop
          type: string
        mirek_delta:
          description: Mirek delta to current mirek. Clip at mirek_minimum and mirek_maximum
            of mirek_schema.
          maximum: 347
          minimum: 0
          type: integer
      type: object
    Dynamics:
      example:
        duration: 5
        speed: 0.0
      properties:
        duration:
          description: Duration of a light transition or timed effects in ms.
          type: integer
        speed:
          description: |
            Speed of dynamic palette or effect.
            The speed is valid for the dynamic palette if the status is `dynamic_palette` or for the corresponding effect listed in status.
            In case of status `none`, the speed is not valid.
          maximum: 0
          minimum: 0
          type: number
      type: object
    Alert:
      description: Joined alert control
      example:
        action: breathe
      properties:
        action:
          example: breathe
          type: string
      type: object
    Signaling:
      description: Feature containing basic signaling properties.
      example:
        duration: 15086817
        color:
        - xy:
            x: 0.7061401241503109
            "y": 0.9301444243932576
        - xy:
            x: 0.7061401241503109
            "y": 0.9301444243932576
        signal: no_signal
      properties:
        signal:
          description: |
            - `no_signal`: No signal is active. Write “no_signal” to stop active signal.
            - `on_off`: Toggles between max brightness and Off in fixed color.
            - `on_off_color`: Toggles between off and max brightness with color provided.
            - `alternating`: Alternates between 2 provided colors.
          enum:
          - no_signal
          - on_off
          - on_off_color
          - alternating
          type: string
        duration:
          description: |
            Duration has a max of 65534000 ms and a stepsize of 1 second.
            Values inbetween steps will be rounded.
            Duration is ignored for `no_signal`.
          maximum: 65534000
          minimum: 0
          type: integer
        color:
          description: List of colors to apply to the signal (not supported by all
            signals)
          items:
            $ref: '#/components/schemas/Color'
          maxItems: 2
          minItems: 1
          type: array
      type: object
    Effects:
      description: Basic feature containing effect properties.
      example:
        effect: prism
      properties:
        effect:
          $ref: '#/components/schemas/SupportedEffects'
      type: object
    Powerup:
      description: Feature containing properties to configure powerup behaviour of
        a lightsource.
      example:
        configured: true
        dimming:
          mode: dimming
          dimming: 93.01444243932576
          color:
            mode: color_temperature
            color_temperature:
              color:
                xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              mirek: 195
        preset: safety
        "on":
          mode: "on"
          "on":
            "on": true
      properties:
        preset:
          description: "When setting the custom preset the additional properties can\
            \ be set. For all other presets, no other properties can be included."
          enum:
          - safety
          - powerfail
          - last_on_state
          - custom
          type: string
        configured:
          description: Indicates if the shown values have been configured in the lightsource.
          type: boolean
        "on":
          $ref: '#/components/schemas/LightGet_allOf_powerup_on'
        dimming:
          $ref: '#/components/schemas/Powerup_dimming'
      type: object
    LightPut:
      example:
        powerup:
          configured: true
          dimming:
            mode: dimming
            dimming: 93.01444243932576
            color:
              mode: color_temperature
              color_temperature:
                color:
                  xy:
                    x: 0.7061401241503109
                    "y": 0.9301444243932576
                mirek: 195
          preset: safety
          "on":
            mode: "on"
            "on":
              "on": true
        signaling:
          duration: 15086817
          color:
          - xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
          - xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
          signal: no_signal
        dimming_delta:
          action: up
          brightness_delta: 8.008281904610115
        color:
          xy:
            x: 0.7061401241503109
            "y": 0.9301444243932576
        color_temperature:
          mirek: 362
        gradient:
          mode: interpolated_palette
          points:
          - xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
          - xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
          - xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
          - xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
          - xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
        timed_effects:
          duration: 7
          effect: sunrise
        type: type
        mode: normal
        dimming:
          brightness: 73.86281948385884
        dynamics:
          duration: 5
          speed: 0.0
        effects:
          effect: prism
        color_temperature_delta:
          mirek_delta: 50
          action: up
        alert:
          action: breathe
        "on":
          "on": true
      properties:
        type:
          description: Type of the supported resources (always `light` here)
          type: string
        "on":
          $ref: '#/components/schemas/On'
        dimming:
          $ref: '#/components/schemas/Dimming'
        dimming_delta:
          $ref: '#/components/schemas/DimmingDelta'
        color_temperature:
          $ref: '#/components/schemas/ColorTemperature'
        color_temperature_delta:
          $ref: '#/components/schemas/ColorTemperatureDelta'
        color:
          $ref: '#/components/schemas/Color'
        dynamics:
          $ref: '#/components/schemas/Dynamics'
        alert:
          $ref: '#/components/schemas/Alert'
        signaling:
          $ref: '#/components/schemas/Signaling'
        mode:
          enum:
          - normal
          - streaming
          type: string
        gradient:
          $ref: '#/components/schemas/Gradient'
        effects:
          $ref: '#/components/schemas/Effects'
        timed_effects:
          $ref: '#/components/schemas/LightPut_timed_effects'
        powerup:
          $ref: '#/components/schemas/Powerup'
      type: object
    LightLevelGet:
      allOf:
      - $ref: '#/components/schemas/ResourceOwned'
      - properties:
          enabled:
            description: "true when sensor is activated, false when deactivated"
            type: boolean
          light:
            $ref: '#/components/schemas/LightLevelGet_allOf_light'
        type: object
      example:
        owner:
          rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        light:
          light_level_valid: true
          light_level_report:
            light_level: 6
            changed: 2000-01-23T04:56:07.000+00:00
          light_level: 0
        id_v1: /lights/8
        id: 3883f8bf-30a3-445b-ac06-b047d50599df
        type: light
        enabled: true
      type: object
    LightLevelPut:
      example:
        type: type
        enabled: true
      properties:
        type:
          description: Type of the supported resources (always `light_level` here)
          type: string
        enabled:
          description: "true when sensor is activated, false when deactivated"
          type: boolean
      type: object
    MotionGet:
      allOf:
      - $ref: '#/components/schemas/ResourceOwned'
      - properties:
          enabled:
            description: "ture when the sensor is activated, false when deactivated"
            type: boolean
          motion:
            $ref: '#/components/schemas/MotionGet_allOf_motion'
          sensitivity:
            $ref: '#/components/schemas/MotionGet_allOf_sensitivity'
        type: object
      example:
        owner:
          rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        motion:
          motion: true
          motion_report:
            motion: true
            changed: changed
          motion_valid: true
        id_v1: /lights/8
        id: 3883f8bf-30a3-445b-ac06-b047d50599df
        sensitivity:
          sensitivity_max: 6
          sensitivity: 0
          status: set
        type: light
        enabled: true
      type: object
    MotionPut:
      example:
        sensitivity:
          sensitivity: 0
        type: type
        enabled: true
      properties:
        type:
          description: Type of the supported resources (always `motion` here)
          type: string
        enabled:
          description: "true when the sensor is activated, false when deactivated"
          type: boolean
        sensitivity:
          $ref: '#/components/schemas/MotionPut_sensitivity'
      type: object
    GroupedLightGet:
      allOf:
      - $ref: '#/components/schemas/ResourceOwned'
      - properties:
          "on":
            $ref: '#/components/schemas/On'
          dimming:
            $ref: '#/components/schemas/Dimming'
          alert:
            $ref: '#/components/schemas/GroupedLightGet_allOf_alert'
          signaling:
            $ref: '#/components/schemas/GroupedLightGet_allOf_signaling'
        type: object
      example:
        owner:
          rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        dimming:
          brightness: 73.86281948385884
        signaling:
          signal_values:
          - no_signal
          - no_signal
        alert:
          action_values:
          - breathe
          - breathe
        id_v1: /lights/8
        id: 3883f8bf-30a3-445b-ac06-b047d50599df
        type: light
        "on":
          "on": true
      type: object
    Dynamics-2:
      example:
        duration: 0
      properties:
        duration:
          description: Duration of a light transition or timed effects in ms.
          minimum: 0
          type: integer
      type: object
    GroupedLightPut:
      example:
        dimming:
          brightness: 73.86281948385884
        dynamics:
          duration: 0
        signaling:
          duration: 15086817
          color:
          - xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
          - xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
          signal: no_signal
        dimming_delta:
          action: up
          brightness_delta: 8.008281904610115
        color_temperature_delta:
          mirek_delta: 50
          action: up
        color:
          xy:
            x: 0.7061401241503109
            "y": 0.9301444243932576
        color_temperature:
          mirek: 362
        alert:
          action: breathe
        type: grouped_light
        "on":
          "on": true
      properties:
        type:
          description: Type of the supported resources (always `grouped_light` here)
          enum:
          - grouped_light
          type: string
        "on":
          $ref: '#/components/schemas/On'
        dimming:
          $ref: '#/components/schemas/Dimming'
        dimming_delta:
          $ref: '#/components/schemas/DimmingDelta'
        color_temperature:
          $ref: '#/components/schemas/ColorTemperature'
        color_temperature_delta:
          $ref: '#/components/schemas/ColorTemperatureDelta'
        color:
          $ref: '#/components/schemas/Color'
        alert:
          $ref: '#/components/schemas/Alert'
        signaling:
          $ref: '#/components/schemas/Signaling'
        dynamics:
          $ref: '#/components/schemas/Dynamics-2'
      type: object
    BridgeGet:
      allOf:
      - $ref: '#/components/schemas/ResourceOwned'
      - properties:
          type:
            enum:
            - bridge
            type: string
          bridge_id:
            description: Unique identifier of the bridge as printed on the device.
              Lower case (shouldn't it be upper case?)
            type: string
          time_zone:
            $ref: '#/components/schemas/BridgeGet_allOf_time_zone'
        type: object
      description: Definition of a bridge resource
      example:
        owner:
          rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        bridge_id: bridge_id
        id_v1: /lights/8
        id: 3883f8bf-30a3-445b-ac06-b047d50599df
        type: bridge
        time_zone:
          time_zone: time_zone
      type: object
    BridgePut:
      example:
        type: bridge
      properties:
        type:
          enum:
          - bridge
          type: string
      type: object
    BridgeHomeGet:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - properties:
          type:
            enum:
            - bridge_home
            type: string
          children:
            description: Child devices/services to group by the derived group.
            items:
              $ref: '#/components/schemas/ResourceIdentifier'
            type: array
          services:
            description: |
              References all services aggregating control and state of children in the group.
              This includes all services grouped in the group hierarchy given by child relation.
              This includes all services of a device grouped in the group hierarchy given by child relation.
              Aggregation is per service type, ie every service type which can be grouped has a corresponding definition
              of grouped type Supported types: – grouped_light
            items:
              $ref: '#/components/schemas/ResourceIdentifier'
            type: array
        type: object
      description: Definition of a bridge resource
      example:
        children:
        - rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        - rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        id_v1: /lights/8
        id: 3883f8bf-30a3-445b-ac06-b047d50599df
        services:
        - rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        - rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        type: bridge_home
      type: object
    ActionGet:
      allOf:
      - $ref: '#/components/schemas/ResourceOwned'
      - properties:
          target:
            $ref: '#/components/schemas/LightGet_allOf_gradient'
          action:
            $ref: '#/components/schemas/ActionGet_allOf_action'
        type: object
      example:
        owner:
          rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        id_v1: /lights/8
        action:
          dimming:
            brightness: 73.86281948385884
          effects:
            effect: prism
          color:
            xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
          color_temperature:
            mirek: 362
          gradient:
            mode: interpolated_palette
            points:
            - xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
            - xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
            - xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
            - xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
            - xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
          "on":
            "on": true
        id: 3883f8bf-30a3-445b-ac06-b047d50599df
        type: light
        target: null
      type: object
    SceneMetadata:
      example:
        image:
          rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        name: name
        appdata: appdata
      properties:
        name:
          description: Human readable name of a resource
          maxLength: 32
          minLength: 1
          type: string
        image:
          $ref: '#/components/schemas/ResourceIdentifier'
        appdata:
          description: Application specific data. Free format string.
          maxLength: 16
          minLength: 1
          type: string
      type: object
    ColorPaletteGet:
      example:
        dimming:
          brightness: 73.86281948385884
        color:
          xy:
            x: 0.7061401241503109
            "y": 0.9301444243932576
      properties:
        color:
          $ref: '#/components/schemas/Color'
        dimming:
          $ref: '#/components/schemas/Dimming'
      type: object
    ColorTemperaturePalettePost:
      example:
        dimming:
          brightness: 73.86281948385884
        color_temperature:
          mirek: 180
      properties:
        color_temperature:
          $ref: '#/components/schemas/ColorTemperaturePalettePost_color_temperature'
        dimming:
          $ref: '#/components/schemas/Dimming'
      type: object
    ScenePalette:
      description: Group of colors that describe the palette of colors to be used
        when playing dynamics
      example:
        dimming:
        - brightness: 73.86281948385884
        effects:
        - effect: null
        - effect: null
        - effect: null
        color:
        - dimming:
            brightness: 73.86281948385884
          color:
            xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
        - dimming:
            brightness: 73.86281948385884
          color:
            xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
        - dimming:
            brightness: 73.86281948385884
          color:
            xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
        - dimming:
            brightness: 73.86281948385884
          color:
            xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
        - dimming:
            brightness: 73.86281948385884
          color:
            xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
        color_temperature:
        - dimming:
            brightness: 73.86281948385884
          color_temperature:
            mirek: 180
      properties:
        color:
          items:
            $ref: '#/components/schemas/ColorPaletteGet'
          maxItems: 9
          minItems: 0
          type: array
        dimming:
          items:
            $ref: '#/components/schemas/Dimming'
          maxItems: 1
          minItems: 0
          type: array
        color_temperature:
          items:
            $ref: '#/components/schemas/ColorTemperaturePalettePost'
          maxItems: 1
          minItems: 0
          type: array
        effects:
          items:
            $ref: '#/components/schemas/ScenePalette_effects_inner'
          maxItems: 3
          minItems: 0
          type: array
      type: object
    SceneGet:
      allOf:
      - $ref: '#/components/schemas/ResourceOwned'
      - properties:
          type:
            enum:
            - scene
            type: string
          actions:
            description: List of actions to be executed synchronously on recall
            items:
              $ref: '#/components/schemas/ActionGet'
            type: array
          metadata:
            $ref: '#/components/schemas/SceneMetadata'
          group:
            $ref: '#/components/schemas/ResourceIdentifier'
          palette:
            $ref: '#/components/schemas/ScenePalette'
          speed:
            description: Speed of dynamic palette for this scene
            maximum: 1
            minimum: 0
            type: number
          auto_dynamic:
            description: Indicates whether to automatically start the scene dynamically
              on active recall
            type: boolean
          status:
            $ref: '#/components/schemas/SceneGet_allOf_status'
        type: object
      example:
        owner:
          rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        metadata:
          image:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          name: name
          appdata: appdata
        auto_dynamic: true
        id_v1: /lights/8
        palette:
          dimming:
          - brightness: 73.86281948385884
          effects:
          - effect: null
          - effect: null
          - effect: null
          color:
          - dimming:
              brightness: 73.86281948385884
            color:
              xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
          - dimming:
              brightness: 73.86281948385884
            color:
              xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
          - dimming:
              brightness: 73.86281948385884
            color:
              xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
          - dimming:
              brightness: 73.86281948385884
            color:
              xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
          - dimming:
              brightness: 73.86281948385884
            color:
              xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
          color_temperature:
          - dimming:
              brightness: 73.86281948385884
            color_temperature:
              mirek: 180
        id: 3883f8bf-30a3-445b-ac06-b047d50599df
        type: scene
        actions:
        - owner:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          id_v1: /lights/8
          action:
            dimming:
              brightness: 73.86281948385884
            effects:
              effect: prism
            color:
              xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
            color_temperature:
              mirek: 362
            gradient:
              mode: interpolated_palette
              points:
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
            "on":
              "on": true
          id: 3883f8bf-30a3-445b-ac06-b047d50599df
          type: light
          target: null
        - owner:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          id_v1: /lights/8
          action:
            dimming:
              brightness: 73.86281948385884
            effects:
              effect: prism
            color:
              xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
            color_temperature:
              mirek: 362
            gradient:
              mode: interpolated_palette
              points:
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
            "on":
              "on": true
          id: 3883f8bf-30a3-445b-ac06-b047d50599df
          type: light
          target: null
        speed: 0.6027456183070403
        group:
          rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        status:
          active: inactive
      type: object
    ActionPost:
      example:
        action:
          dimming:
            brightness: 73.86281948385884
          effects:
            effect: prism
          dynamics:
            duration: 0
          color:
            xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
          color_temperature:
            mirek: 180
          gradient:
            mode: interpolated_palette
            points:
            - xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
            - xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
            - xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
            - xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
            - xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
          "on":
            "on": true
        target:
          rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
      properties:
        target:
          $ref: '#/components/schemas/ResourceIdentifier'
        action:
          $ref: '#/components/schemas/ActionPost_action'
      required:
      - action
      - target
      type: object
    ScenePost:
      example:
        metadata:
          image:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          name: name
          appdata: appdata
        auto_dynamic: true
        palette:
          dimming:
          - brightness: 73.86281948385884
          effects:
          - effect: null
          - effect: null
          - effect: null
          color:
          - dimming:
              brightness: 73.86281948385884
            color:
              xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
          - dimming:
              brightness: 73.86281948385884
            color:
              xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
          - dimming:
              brightness: 73.86281948385884
            color:
              xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
          - dimming:
              brightness: 73.86281948385884
            color:
              xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
          - dimming:
              brightness: 73.86281948385884
            color:
              xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
          color_temperature:
          - dimming:
              brightness: 73.86281948385884
            color_temperature:
              mirek: 180
        type: scene
        actions:
        - action:
            dimming:
              brightness: 73.86281948385884
            effects:
              effect: prism
            dynamics:
              duration: 0
            color:
              xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
            color_temperature:
              mirek: 180
            gradient:
              mode: interpolated_palette
              points:
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
            "on":
              "on": true
          target:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        - action:
            dimming:
              brightness: 73.86281948385884
            effects:
              effect: prism
            dynamics:
              duration: 0
            color:
              xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
            color_temperature:
              mirek: 180
            gradient:
              mode: interpolated_palette
              points:
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
            "on":
              "on": true
          target:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        speed: 0.08008281904610115
        group:
          rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
      properties:
        type:
          enum:
          - scene
          type: string
        actions:
          description: List of actions to be executed synchronously on recall
          items:
            $ref: '#/components/schemas/ActionPost'
          type: array
        metadata:
          $ref: '#/components/schemas/SceneMetadata'
        group:
          $ref: '#/components/schemas/ResourceIdentifier'
        palette:
          $ref: '#/components/schemas/ScenePalette'
        speed:
          description: Speed of dynamic palette for this scene
          maximum: 1
          minimum: 0
          type: number
        auto_dynamic:
          description: Indicates whether to automatically start the scene dynamically
            on active recall
          type: boolean
      required:
      - actions
      - group
      - metadata
      type: object
    SceneRecall:
      example:
        duration: 0
        dimming:
          brightness: 73.86281948385884
        action: active
      properties:
        action:
          description: "When writing active, the actions in the scene are executed\
            \ on the target. dynamic_palette starts dynamic scene with colors in the\
            \ Palette object."
          enum:
          - active
          - dynamic_palette
          - static
          type: string
        duration:
          description: Transition to the scene within the timeframe given by duration
          type: integer
        dimming:
          $ref: '#/components/schemas/Dimming'
      type: object
    ScenePut:
      example:
        metadata:
          image:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          name: name
          appdata: appdata
        auto_dynamic: true
        recall:
          duration: 0
          dimming:
            brightness: 73.86281948385884
          action: active
        palette:
          dimming:
          - brightness: 73.86281948385884
          effects:
          - effect: null
          - effect: null
          - effect: null
          color:
          - dimming:
              brightness: 73.86281948385884
            color:
              xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
          - dimming:
              brightness: 73.86281948385884
            color:
              xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
          - dimming:
              brightness: 73.86281948385884
            color:
              xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
          - dimming:
              brightness: 73.86281948385884
            color:
              xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
          - dimming:
              brightness: 73.86281948385884
            color:
              xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
          color_temperature:
          - dimming:
              brightness: 73.86281948385884
            color_temperature:
              mirek: 180
        type: scene
        actions:
        - action:
            dimming:
              brightness: 73.86281948385884
            effects:
              effect: prism
            dynamics:
              duration: 0
            color:
              xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
            color_temperature:
              mirek: 180
            gradient:
              mode: interpolated_palette
              points:
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
            "on":
              "on": true
          target:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        - action:
            dimming:
              brightness: 73.86281948385884
            effects:
              effect: prism
            dynamics:
              duration: 0
            color:
              xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
            color_temperature:
              mirek: 180
            gradient:
              mode: interpolated_palette
              points:
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              - xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
            "on":
              "on": true
          target:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        speed: 0.6027456183070403
      properties:
        type:
          enum:
          - scene
          type: string
        actions:
          description: List of actions to be executed synchronously on recall
          items:
            $ref: '#/components/schemas/ActionPost'
          type: array
        recall:
          $ref: '#/components/schemas/SceneRecall'
        metadata:
          $ref: '#/components/schemas/SceneMetadata'
        palette:
          $ref: '#/components/schemas/ScenePalette'
        speed:
          description: Speed of dynamic palette for this scene
          maximum: 1
          minimum: 0
          type: number
        auto_dynamic:
          description: Indicates whether to automatically start the scene dynamically
            on active recall
          type: boolean
      type: object
    RoomArchetype:
      description: Possible archetypes of a room
      enum:
      - living_room
      - kitchen
      - dining
      - bedroom
      - kids_bedroom
      - bathroom
      - nursery
      - recreation
      - office
      - gym
      - hallway
      - toilet
      - front_door
      - garage
      - terrace
      - garden
      - driveway
      - carport
      - home
      - downstairs
      - upstairs
      - top_floor
      - attic
      - guest_room
      - staircase
      - lounge
      - man_cave
      - computer
      - studio
      - music
      - tv
      - reading
      - closet
      - storage
      - laundry_room
      - balcony
      - porch
      - barbecue
      - pool
      - other
      type: string
    RoomGet:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - properties:
          children:
            description: Child devices/services to group by the derived group
            items:
              $ref: '#/components/schemas/ResourceIdentifier'
            type: array
          services:
            description: |
              References all services aggregating control and state of children in the group.
              This includes all services grouped in the group hierarchy given by child relation.
              This includes all services of a device grouped in the group hierarchy given by child relation.
              Aggregation is per service type, ie every service type which can be grouped has a corresponding definition of
              grouped type.
              Supported types: – grouped_light
            items:
              $ref: '#/components/schemas/ResourceIdentifier'
            type: array
          metadata:
            $ref: '#/components/schemas/RoomGet_allOf_metadata'
        type: object
      example:
        metadata:
          archetype: living_room
          name: name
        children:
        - rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        - rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        id_v1: /lights/8
        id: 3883f8bf-30a3-445b-ac06-b047d50599df
        services:
        - rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        - rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        type: light
      type: object
    RoomPut:
      example:
        metadata:
          archetype: living_room
          name: name
        children:
        - rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        - rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        type: type
      properties:
        type:
          description: Type of the supported resources (always `room` here)
          type: string
        children:
          description: Child devices/services to group by the derived group
          items:
            $ref: '#/components/schemas/ResourceIdentifier'
          type: array
        metadata:
          $ref: '#/components/schemas/RoomGet_allOf_metadata'
      type: object
    TemperatureGet:
      allOf:
      - $ref: '#/components/schemas/ResourceOwned'
      - properties:
          enabled:
            description: |
              `true` when sensor is activated, `false` when deactivated
            type: boolean
          temperature:
            $ref: '#/components/schemas/TemperatureGet_allOf_temperature'
        type: object
      example:
        owner:
          rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        temperature:
          temperature_valid: true
          temperature: 23
          temperature_report:
            temperature: 23
            changed: 2000-01-23T04:56:07.000+00:00
        id_v1: /lights/8
        id: 3883f8bf-30a3-445b-ac06-b047d50599df
        type: light
        enabled: true
      type: object
    TemperaturePut:
      example:
        type: temperature
        enabled: true
      properties:
        type:
          description: Type of the supported resources (always `temperature` here)
          enum:
          - temperature
          type: string
        enabled:
          description: "true when sensor is activated, false when deactivated"
          type: boolean
      type: object
    authenticate_request:
      properties:
        devicetype:
          example: app_name#instance_name
          type: string
        generateclientkey:
          type: boolean
      type: object
    getResources_200_response:
      example:
        data:
        - owner:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          id_v1: /lights/8
          id: 3883f8bf-30a3-445b-ac06-b047d50599df
          type: light
        - owner:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          id_v1: /lights/8
          id: 3883f8bf-30a3-445b-ac06-b047d50599df
          type: light
        errors:
        - description: description
        - description: description
      properties:
        errors:
          items:
            $ref: '#/components/schemas/Error'
          type: array
        data:
          items:
            $ref: '#/components/schemas/ResourceGet'
          type: array
      type: object
    getDevices_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/DeviceGet'
            type: array
        type: object
      example:
        data:
        - owner:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          usertest:
            usertest: true
            status: set
          metadata:
            archetype: hue_go
            name: name
          id_v1: /lights/8
          id: 3883f8bf-30a3-445b-ac06-b047d50599df
          product_data:
            product_archetype: hue_go
            hardware_platform_type: 100b-120
            certified: true
            model_id: 7602031P7
            manufacturer_name: Signify Netherlands B.V.
            software_version: 1.104.3
            product_name: Hue Go
          services:
          - rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          - rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          type: device
        - owner:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          usertest:
            usertest: true
            status: set
          metadata:
            archetype: hue_go
            name: name
          id_v1: /lights/8
          id: 3883f8bf-30a3-445b-ac06-b047d50599df
          product_data:
            product_archetype: hue_go
            hardware_platform_type: 100b-120
            certified: true
            model_id: 7602031P7
            manufacturer_name: Signify Netherlands B.V.
            software_version: 1.104.3
            product_name: Hue Go
          services:
          - rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          - rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          type: device
        errors:
        - description: description
        - description: description
    updateDevice_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/ResourceIdentifier'
            type: array
        type: object
      example:
        data:
        - rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        - rtype: device
          rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
        errors:
        - description: description
        - description: description
    getDevicePowers_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/DevicePowerGet'
            type: array
        type: object
      example:
        data:
        - owner:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          id_v1: /lights/8
          id: 3883f8bf-30a3-445b-ac06-b047d50599df
          type: light
          power_state:
            battery_state: normal
            battery_level: 8
        - owner:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          id_v1: /lights/8
          id: 3883f8bf-30a3-445b-ac06-b047d50599df
          type: light
          power_state:
            battery_state: normal
            battery_level: 8
        errors:
        - description: description
        - description: description
    getLights_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/LightGet'
            type: array
        type: object
      example:
        data:
        - owner:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          powerup:
            configured: true
            dimming:
              mode: dimming
              dimming:
                brightness: 73.86281948385884
              color:
                mode: color_temperature
                color_temperature:
                  color:
                    xy:
                      x: 0.7061401241503109
                      "y": 0.9301444243932576
                  mirek: 195
            preset: safety
            "on":
              mode: "on"
              "on":
                "on": true
          metadata:
            archetype: classic_bulb
            name: name
            fixed_mired: 8
          signaling:
            signal_values:
            - no_signal
            - no_signal
            estimated_end: 2
            colors:
            - xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
            - xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
          color:
            gamut_type: A
            xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
            gamut:
              red:
                x: 0.7061401241503109
                "y": 0.9301444243932576
              green:
                x: 0.7061401241503109
                "y": 0.9301444243932576
              blue:
                x: 0.7061401241503109
                "y": 0.9301444243932576
          color_temperature:
            mirek_schema:
              mirek_maximum: 232
              mirek_minimum: 348
            mirek_valid: true
            mirek: 359
          gradient: null
          id_v1: /lights/8
          timed_effects:
            duration: 4
            status_values:
            - null
            - null
            effect: sunrise
            effect_values:
            - null
            - null
            status: null
          type: light
          mode: normal
          dimming:
            brightness: 60.27456183070403
            min_dim_level: 14.658129805029452
          dynamics:
            status_values:
            - null
            - null
            speed_valid: true
            speed: 0.0
            status: dynamic_palette
          effects:
            status_values:
            - null
            - null
            effect: null
            effect_values:
            - null
            - null
            status: prism
          alert: null
          id: 3883f8bf-30a3-445b-ac06-b047d50599df
          "on":
            "on": true
        - owner:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          powerup:
            configured: true
            dimming:
              mode: dimming
              dimming:
                brightness: 73.86281948385884
              color:
                mode: color_temperature
                color_temperature:
                  color:
                    xy:
                      x: 0.7061401241503109
                      "y": 0.9301444243932576
                  mirek: 195
            preset: safety
            "on":
              mode: "on"
              "on":
                "on": true
          metadata:
            archetype: classic_bulb
            name: name
            fixed_mired: 8
          signaling:
            signal_values:
            - no_signal
            - no_signal
            estimated_end: 2
            colors:
            - xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
            - xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
          color:
            gamut_type: A
            xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
            gamut:
              red:
                x: 0.7061401241503109
                "y": 0.9301444243932576
              green:
                x: 0.7061401241503109
                "y": 0.9301444243932576
              blue:
                x: 0.7061401241503109
                "y": 0.9301444243932576
          color_temperature:
            mirek_schema:
              mirek_maximum: 232
              mirek_minimum: 348
            mirek_valid: true
            mirek: 359
          gradient: null
          id_v1: /lights/8
          timed_effects:
            duration: 4
            status_values:
            - null
            - null
            effect: sunrise
            effect_values:
            - null
            - null
            status: null
          type: light
          mode: normal
          dimming:
            brightness: 60.27456183070403
            min_dim_level: 14.658129805029452
          dynamics:
            status_values:
            - null
            - null
            speed_valid: true
            speed: 0.0
            status: dynamic_palette
          effects:
            status_values:
            - null
            - null
            effect: null
            effect_values:
            - null
            - null
            status: prism
          alert: null
          id: 3883f8bf-30a3-445b-ac06-b047d50599df
          "on":
            "on": true
        errors:
        - description: description
        - description: description
    getLightLevels_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/LightLevelGet'
            type: array
        type: object
      example:
        data:
        - owner:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          light:
            light_level_valid: true
            light_level_report:
              light_level: 6
              changed: 2000-01-23T04:56:07.000+00:00
            light_level: 0
          id_v1: /lights/8
          id: 3883f8bf-30a3-445b-ac06-b047d50599df
          type: light
          enabled: true
        - owner:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          light:
            light_level_valid: true
            light_level_report:
              light_level: 6
              changed: 2000-01-23T04:56:07.000+00:00
            light_level: 0
          id_v1: /lights/8
          id: 3883f8bf-30a3-445b-ac06-b047d50599df
          type: light
          enabled: true
        errors:
        - description: description
        - description: description
    getMotionSensors_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/MotionGet'
            type: array
        type: object
      example:
        data:
        - owner:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          motion:
            motion: true
            motion_report:
              motion: true
              changed: changed
            motion_valid: true
          id_v1: /lights/8
          id: 3883f8bf-30a3-445b-ac06-b047d50599df
          sensitivity:
            sensitivity_max: 6
            sensitivity: 0
            status: set
          type: light
          enabled: true
        - owner:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          motion:
            motion: true
            motion_report:
              motion: true
              changed: changed
            motion_valid: true
          id_v1: /lights/8
          id: 3883f8bf-30a3-445b-ac06-b047d50599df
          sensitivity:
            sensitivity_max: 6
            sensitivity: 0
            status: set
          type: light
          enabled: true
        errors:
        - description: description
        - description: description
    getGroupedLights_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/GroupedLightGet'
            type: array
        type: object
      example:
        data:
        - owner:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          dimming:
            brightness: 73.86281948385884
          signaling:
            signal_values:
            - no_signal
            - no_signal
          alert:
            action_values:
            - breathe
            - breathe
          id_v1: /lights/8
          id: 3883f8bf-30a3-445b-ac06-b047d50599df
          type: light
          "on":
            "on": true
        - owner:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          dimming:
            brightness: 73.86281948385884
          signaling:
            signal_values:
            - no_signal
            - no_signal
          alert:
            action_values:
            - breathe
            - breathe
          id_v1: /lights/8
          id: 3883f8bf-30a3-445b-ac06-b047d50599df
          type: light
          "on":
            "on": true
        errors:
        - description: description
        - description: description
    getBridges_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/BridgeGet'
            type: array
        type: object
      example:
        data:
        - owner:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          bridge_id: bridge_id
          id_v1: /lights/8
          id: 3883f8bf-30a3-445b-ac06-b047d50599df
          type: bridge
          time_zone:
            time_zone: time_zone
        - owner:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          bridge_id: bridge_id
          id_v1: /lights/8
          id: 3883f8bf-30a3-445b-ac06-b047d50599df
          type: bridge
          time_zone:
            time_zone: time_zone
        errors:
        - description: description
        - description: description
    getBridgeHomes_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/BridgeHomeGet'
            type: array
        type: object
      example:
        data:
        - children:
          - rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          - rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          id_v1: /lights/8
          id: 3883f8bf-30a3-445b-ac06-b047d50599df
          services:
          - rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          - rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          type: bridge_home
        - children:
          - rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          - rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          id_v1: /lights/8
          id: 3883f8bf-30a3-445b-ac06-b047d50599df
          services:
          - rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          - rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          type: bridge_home
        errors:
        - description: description
        - description: description
    getScenes_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/SceneGet'
            type: array
        type: object
      example:
        data:
        - owner:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          metadata:
            image:
              rtype: device
              rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
            name: name
            appdata: appdata
          auto_dynamic: true
          id_v1: /lights/8
          palette:
            dimming:
            - brightness: 73.86281948385884
            effects:
            - effect: null
            - effect: null
            - effect: null
            color:
            - dimming:
                brightness: 73.86281948385884
              color:
                xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
            - dimming:
                brightness: 73.86281948385884
              color:
                xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
            - dimming:
                brightness: 73.86281948385884
              color:
                xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
            - dimming:
                brightness: 73.86281948385884
              color:
                xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
            - dimming:
                brightness: 73.86281948385884
              color:
                xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
            color_temperature:
            - dimming:
                brightness: 73.86281948385884
              color_temperature:
                mirek: 180
          id: 3883f8bf-30a3-445b-ac06-b047d50599df
          type: scene
          actions:
          - owner:
              rtype: device
              rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
            id_v1: /lights/8
            action:
              dimming:
                brightness: 73.86281948385884
              effects:
                effect: prism
              color:
                xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              color_temperature:
                mirek: 362
              gradient:
                mode: interpolated_palette
                points:
                - xy:
                    x: 0.7061401241503109
                    "y": 0.9301444243932576
                - xy:
                    x: 0.7061401241503109
                    "y": 0.9301444243932576
                - xy:
                    x: 0.7061401241503109
                    "y": 0.9301444243932576
                - xy:
                    x: 0.7061401241503109
                    "y": 0.9301444243932576
                - xy:
                    x: 0.7061401241503109
                    "y": 0.9301444243932576
              "on":
                "on": true
            id: 3883f8bf-30a3-445b-ac06-b047d50599df
            type: light
            target: null
          - owner:
              rtype: device
              rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
            id_v1: /lights/8
            action:
              dimming:
                brightness: 73.86281948385884
              effects:
                effect: prism
              color:
                xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              color_temperature:
                mirek: 362
              gradient:
                mode: interpolated_palette
                points:
                - xy:
                    x: 0.7061401241503109
                    "y": 0.9301444243932576
                - xy:
                    x: 0.7061401241503109
                    "y": 0.9301444243932576
                - xy:
                    x: 0.7061401241503109
                    "y": 0.9301444243932576
                - xy:
                    x: 0.7061401241503109
                    "y": 0.9301444243932576
                - xy:
                    x: 0.7061401241503109
                    "y": 0.9301444243932576
              "on":
                "on": true
            id: 3883f8bf-30a3-445b-ac06-b047d50599df
            type: light
            target: null
          speed: 0.6027456183070403
          group:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          status:
            active: inactive
        - owner:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          metadata:
            image:
              rtype: device
              rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
            name: name
            appdata: appdata
          auto_dynamic: true
          id_v1: /lights/8
          palette:
            dimming:
            - brightness: 73.86281948385884
            effects:
            - effect: null
            - effect: null
            - effect: null
            color:
            - dimming:
                brightness: 73.86281948385884
              color:
                xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
            - dimming:
                brightness: 73.86281948385884
              color:
                xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
            - dimming:
                brightness: 73.86281948385884
              color:
                xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
            - dimming:
                brightness: 73.86281948385884
              color:
                xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
            - dimming:
                brightness: 73.86281948385884
              color:
                xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
            color_temperature:
            - dimming:
                brightness: 73.86281948385884
              color_temperature:
                mirek: 180
          id: 3883f8bf-30a3-445b-ac06-b047d50599df
          type: scene
          actions:
          - owner:
              rtype: device
              rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
            id_v1: /lights/8
            action:
              dimming:
                brightness: 73.86281948385884
              effects:
                effect: prism
              color:
                xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              color_temperature:
                mirek: 362
              gradient:
                mode: interpolated_palette
                points:
                - xy:
                    x: 0.7061401241503109
                    "y": 0.9301444243932576
                - xy:
                    x: 0.7061401241503109
                    "y": 0.9301444243932576
                - xy:
                    x: 0.7061401241503109
                    "y": 0.9301444243932576
                - xy:
                    x: 0.7061401241503109
                    "y": 0.9301444243932576
                - xy:
                    x: 0.7061401241503109
                    "y": 0.9301444243932576
              "on":
                "on": true
            id: 3883f8bf-30a3-445b-ac06-b047d50599df
            type: light
            target: null
          - owner:
              rtype: device
              rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
            id_v1: /lights/8
            action:
              dimming:
                brightness: 73.86281948385884
              effects:
                effect: prism
              color:
                xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              color_temperature:
                mirek: 362
              gradient:
                mode: interpolated_palette
                points:
                - xy:
                    x: 0.7061401241503109
                    "y": 0.9301444243932576
                - xy:
                    x: 0.7061401241503109
                    "y": 0.9301444243932576
                - xy:
                    x: 0.7061401241503109
                    "y": 0.9301444243932576
                - xy:
                    x: 0.7061401241503109
                    "y": 0.9301444243932576
                - xy:
                    x: 0.7061401241503109
                    "y": 0.9301444243932576
              "on":
                "on": true
            id: 3883f8bf-30a3-445b-ac06-b047d50599df
            type: light
            target: null
          speed: 0.6027456183070403
          group:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          status:
            active: inactive
        errors:
        - description: description
        - description: description
    getRooms_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/RoomGet'
            type: array
        type: object
      example:
        data:
        - metadata:
            archetype: living_room
            name: name
          children:
          - rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          - rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          id_v1: /lights/8
          id: 3883f8bf-30a3-445b-ac06-b047d50599df
          services:
          - rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          - rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          type: light
        - metadata:
            archetype: living_room
            name: name
          children:
          - rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          - rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          id_v1: /lights/8
          id: 3883f8bf-30a3-445b-ac06-b047d50599df
          services:
          - rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          - rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          type: light
        errors:
        - description: description
        - description: description
    getTemperatures_200_response:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/TemperatureGet'
            type: array
        type: object
      example:
        data:
        - owner:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          temperature:
            temperature_valid: true
            temperature: 23
            temperature_report:
              temperature: 23
              changed: 2000-01-23T04:56:07.000+00:00
          id_v1: /lights/8
          id: 3883f8bf-30a3-445b-ac06-b047d50599df
          type: light
          enabled: true
        - owner:
            rtype: device
            rid: 42edd1f5-9538-4180-9ced-2d9e07f26d0f
          temperature:
            temperature_valid: true
            temperature: 23
            temperature_report:
              temperature: 23
              changed: 2000-01-23T04:56:07.000+00:00
          id_v1: /lights/8
          id: 3883f8bf-30a3-445b-ac06-b047d50599df
          type: light
          enabled: true
        errors:
        - description: description
        - description: description
    response_inner_success:
      example:
        clientkey: clientkey
        username: username
      properties:
        username:
          type: string
        clientkey:
          type: string
      type: object
    response_inner_error:
      example:
        address: address
        description: link button bot pressed
        type: 101
      properties:
        type:
          example: 101
          type: integer
        address:
          type: string
        description:
          example: link button bot pressed
          type: string
      type: object
    response_inner:
      example:
        success:
          clientkey: clientkey
          username: username
        error:
          address: address
          description: link button bot pressed
          type: 101
      properties:
        success:
          $ref: '#/components/schemas/response_inner_success'
        error:
          $ref: '#/components/schemas/response_inner_error'
      type: object
    DeviceGet_allOf_metadata:
      example:
        archetype: hue_go
        name: name
      properties:
        name:
          description: Human readable name of a resource
          maxLength: 32
          minLength: 1
          type: string
        archetype:
          $ref: '#/components/schemas/ProductArchetype'
      type: object
    DeviceGet_allOf_usertest:
      example:
        usertest: true
        status: set
      properties:
        status:
          enum:
          - set
          - changing
          type: string
        usertest:
          description: |
            Activates or extends user usertest mode of device for 120 seconds.
            `false` deactivates usertest mode.
            In usertest mode, devices report changes in state faster and indicate state changes on device LED (if applicable)
          type: boolean
      type: object
    DevicePut_identify:
      example:
        action: identify
      properties:
        action:
          description: |
            Triggers a visual identification sequence, current implemented as (which can change in the future):
            Bridge performs Zigbee LED identification cycles for 5 seconds Lights perform one breathe cycle Sensors
            perform LED identification cycles for 15 seconds
          enum:
          - identify
          type: string
      type: object
    DevicePut_usertest:
      example:
        usertest: true
      properties:
        usertest:
          description: |
            Activates or extends user usertest mode of device for 120 seconds.
            `false` deactivates usertest mode. In usertest mode, devices report changes in state faster and indicate
            state changes on device LED (if applicable)
          type: boolean
      type: object
    DevicePowerGet_allOf_power_state:
      example:
        battery_state: normal
        battery_level: 8
      properties:
        battery_state:
          description: |
            Status of the power source of a device, only for battery powered devices.

            - `normal` – battery level is sufficient
            - `low` – battery level low, some features (e.g. software update) might stop working, please change battery soon
            - `critical` – battery level critical, device can fail any moment
          enum:
          - normal
          - low
          - critical
          type: string
        battery_level:
          description: "The current battery state in percent, only for battery powered\
            \ devices."
          maximum: 100
          minimum: 0
          type: integer
      type: object
    LightGet_allOf_metadata:
      description: "Deprecated, use metadata on device level"
      example:
        archetype: classic_bulb
        name: name
        fixed_mired: 8
      properties:
        name:
          description: Human readable name of a resource
          type: string
        archetype:
          $ref: '#/components/schemas/LightArchetype'
        fixed_mired:
          description: A fixed mired value of the white lamp
          maximum: 100
          minimum: 0
          type: integer
      type: object
    LightGet_allOf_dimming:
      example:
        brightness: 60.27456183070403
        min_dim_level: 14.658129805029452
      properties:
        brightness:
          description: "Brightness percentage. value cannot be 0, writing 0 changes\
            \ it to lowest possible brightness"
          maximum: 100
          minimum: 0
          type: number
        min_dim_level:
          description: Percentage of the maximum lumen the device outputs on minimum
            brightness
          maximum: 100
          minimum: 0
          type: number
      type: object
    LightGet_allOf_color_temperature_mirek_schema:
      example:
        mirek_maximum: 232
        mirek_minimum: 348
      properties:
        mirek_minimum:
          description: minimum color temperature this light supports
          maximum: 500
          minimum: 153
          type: integer
        mirek_maximum:
          description: maximum color temperature this light supports
          maximum: 500
          minimum: 153
          type: integer
      type: object
    LightGet_allOf_color_temperature:
      example:
        mirek_schema:
          mirek_maximum: 232
          mirek_minimum: 348
        mirek_valid: true
        mirek: 359
      properties:
        mirek:
          description: color temperature in mirek or null when the light color is
            not in the ct spectrum
          maximum: 500
          minimum: 153
          type: integer
        mirek_valid:
          description: Indication whether the value presented in mirek is valid
          type: boolean
        mirek_schema:
          $ref: '#/components/schemas/LightGet_allOf_color_temperature_mirek_schema'
      type: object
    LightGet_allOf_color_gamut:
      description: Color gamut of color bulb. Some bulbs do not properly return the
        Gamut information. In this case this is not present.
      example:
        red:
          x: 0.7061401241503109
          "y": 0.9301444243932576
        green:
          x: 0.7061401241503109
          "y": 0.9301444243932576
        blue:
          x: 0.7061401241503109
          "y": 0.9301444243932576
      properties:
        red:
          $ref: '#/components/schemas/GamutPosition'
        green:
          $ref: '#/components/schemas/GamutPosition'
        blue:
          $ref: '#/components/schemas/GamutPosition'
      type: object
    LightGet_allOf_color:
      example:
        gamut_type: A
        xy:
          x: 0.7061401241503109
          "y": 0.9301444243932576
        gamut:
          red:
            x: 0.7061401241503109
            "y": 0.9301444243932576
          green:
            x: 0.7061401241503109
            "y": 0.9301444243932576
          blue:
            x: 0.7061401241503109
            "y": 0.9301444243932576
      properties:
        xy:
          $ref: '#/components/schemas/GamutPosition'
        gamut:
          $ref: '#/components/schemas/LightGet_allOf_color_gamut'
        gamut_type:
          description: The gammut types supported by hue – A Gamut of early Philips
            color-only products – B Limited gamut of first Hue color products – C
            Richer color gamut of Hue white and color ambiance products – other Color
            gamut of non-hue products with non-hue gamuts resp w/o gamut
          enum:
          - A
          - B
          - C
          - other
          type: string
      type: object
    LightGet_allOf_dynamics:
      example:
        status_values:
        - null
        - null
        speed_valid: true
        speed: 0.0
        status: dynamic_palette
      properties:
        status:
          $ref: '#/components/schemas/SupportedDynamicStatus'
        status_values:
          description: Statuses in which a lamp could be when playing dynamics.
          items:
            $ref: '#/components/schemas/SupportedDynamicStatus'
          type: array
        speed:
          description: "speed of dynamic palette or effect. The speed is valid for\
            \ the dynamic palette if the status is dynamic_palette or for the corresponding\
            \ effect listed in status. In case of status none, the speed is not valid"
          maximum: 0
          minimum: 0
          type: number
        speed_valid:
          description: Indicates whether the value presented in speed is valid
          type: boolean
      type: object
    LightGet_allOf_alert:
      description: TODO
      type: object
    LightGet_allOf_signaling:
      description: Feature containing signaling properties.
      example:
        signal_values:
        - no_signal
        - no_signal
        estimated_end: 2
        colors:
        - xy:
            x: 0.7061401241503109
            "y": 0.9301444243932576
        - xy:
            x: 0.7061401241503109
            "y": 0.9301444243932576
      properties:
        signal_values:
          items:
            $ref: '#/components/schemas/SupportedSignals'
          type: array
        estimated_end:
          description: Timestamp indicating when the active signal is expected to
            end. Value is not set if there is no_signal
          type: integer
        colors:
          description: Colors that were provided for the active effect.
          items:
            $ref: '#/components/schemas/Color'
          type: array
      type: object
    LightGet_allOf_gradient:
      type: object
    LightGet_allOf_effects:
      description: Basic feature containing effect properties.
      example:
        status_values:
        - null
        - null
        effect: null
        effect_values:
        - null
        - null
        status: prism
      properties:
        status:
          $ref: '#/components/schemas/SupportedEffects'
        status_values:
          description: Possible status values in which a light could be when playing
            an effect.
          items:
            $ref: '#/components/schemas/SupportedEffects'
          type: array
        effect:
          $ref: '#/components/schemas/SupportedEffects'
        effect_values:
          description: Possible status values in which a light could be when playing
            an effect.
          items:
            $ref: '#/components/schemas/SupportedEffects'
          type: array
      type: object
    LightGet_allOf_timed_effects:
      description: Basic feature containing timed effect properties.
      example:
        duration: 4
        status_values:
        - null
        - null
        effect: sunrise
        effect_values:
        - null
        - null
        status: null
      properties:
        effect:
          $ref: '#/components/schemas/SupportedTimedEffects'
        effect_values:
          description: Possible timed effect values you can set in a light
          items:
            $ref: '#/components/schemas/SupportedTimedEffects'
          type: array
        status:
          $ref: '#/components/schemas/SupportedTimedEffects'
        status_values:
          description: Possible status values in which a light could be when playing
            a timed effect.
          items:
            $ref: '#/components/schemas/SupportedTimedEffects'
          type: array
        duration:
          description: "Duration is mandatory when timed effect is set except for\
            \ no_effect. Resolution decreases for a larger duration. e.g Effects with\
            \ duration smaller than a minute will be rounded to a resolution of 1s,\
            \ while effects with duration larger than an hour will be arounded up\
            \ to a resolution of 300s. Duration has a max of 21600000 ms."
          type: integer
      type: object
    LightGet_allOf_powerup_on:
      example:
        mode: "on"
        "on":
          "on": true
      properties:
        mode:
          description: |
            State to activate after powerup.
            On will use the value specified in the “on” property.
            When setting mode “on”, the on property must be included.
            Toggle will alternate between on and off on each subsequent power toggle.
            Previous will return to the state it was in before powering off.
          enum:
          - "on"
          - toggle
          - previous
          type: string
        "on":
          $ref: '#/components/schemas/On'
      type: object
    LightGet_allOf_powerup_dimming_color_color_temperature:
      example:
        color:
          xy:
            x: 0.7061401241503109
            "y": 0.9301444243932576
        mirek: 195
      properties:
        mirek:
          description: color temperature in mirek or null when the light color is
            not in the ct spectrum
          maximum: 500
          minimum: 153
          type: integer
        color:
          $ref: '#/components/schemas/Color'
      type: object
    LightGet_allOf_powerup_dimming_color:
      example:
        mode: color_temperature
        color_temperature:
          color:
            xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
          mirek: 195
      properties:
        mode:
          description: "State to activate after powerup. Availability of “color_temperature”\
            \ and “color” modes depend on the capabilities of the lamp. Colortemperature\
            \ will set the colortemperature to the specified value after power up.\
            \ When setting color_temperature, the color_temperature property must\
            \ be included Color will set the color tot he specified value after power\
            \ up. When setting color mode, the color property must be included Previous\
            \ will set color to the state it was in before powering off."
          enum:
          - color_temperature
          - color
          - previous
          type: string
        color_temperature:
          $ref: '#/components/schemas/LightGet_allOf_powerup_dimming_color_color_temperature'
      type: object
    LightGet_allOf_powerup_dimming:
      example:
        mode: dimming
        dimming:
          brightness: 73.86281948385884
        color:
          mode: color_temperature
          color_temperature:
            color:
              xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
            mirek: 195
      properties:
        mode:
          description: |
            Dimming will set the brightness to the specified value after power up.
            When setting mode “dimming”, the dimming property must be included.
            Previous will set brightness to the state it was in before powering off.
          enum:
          - dimming
          - previous
          type: string
        dimming:
          $ref: '#/components/schemas/Dimming'
        color:
          $ref: '#/components/schemas/LightGet_allOf_powerup_dimming_color'
      type: object
    LightGet_allOf_powerup:
      description: Feature containing properties to configure powerup behaviour of
        a lightsource.
      example:
        configured: true
        dimming:
          mode: dimming
          dimming:
            brightness: 73.86281948385884
          color:
            mode: color_temperature
            color_temperature:
              color:
                xy:
                  x: 0.7061401241503109
                  "y": 0.9301444243932576
              mirek: 195
        preset: safety
        "on":
          mode: "on"
          "on":
            "on": true
      properties:
        preset:
          description: "When setting the custom preset the additional properties can\
            \ be set. For all other presets, no other properties can be included."
          enum:
          - safety
          - powerfail
          - last_on_state
          - custom
          type: string
        configured:
          description: Indicates if the shown values have been configured in the lightsource.
          type: boolean
        "on":
          $ref: '#/components/schemas/LightGet_allOf_powerup_on'
        dimming:
          $ref: '#/components/schemas/LightGet_allOf_powerup_dimming'
      type: object
    Powerup_dimming:
      example:
        mode: dimming
        dimming: 93.01444243932576
        color:
          mode: color_temperature
          color_temperature:
            color:
              xy:
                x: 0.7061401241503109
                "y": 0.9301444243932576
            mirek: 195
      properties:
        mode:
          description: |
            Dimming will set the brightness to the specified value after power up.
            When setting mode “dimming”, the dimming property must be included.
            Previous will set brightness to the state it was in before powering off.
          enum:
          - dimming
          - previous
          type: string
        dimming:
          description: "Brightness percentage. value cannot be 0, writing 0 changes\
            \ it to lowest possible brightness"
          maximum: 100
          minimum: 0
          type: number
        color:
          $ref: '#/components/schemas/LightGet_allOf_powerup_dimming_color'
      type: object
    LightPut_timed_effects:
      description: Basic feature containing timed effect properties.
      example:
        duration: 7
        effect: sunrise
      properties:
        effect:
          $ref: '#/components/schemas/SupportedTimedEffects'
        duration:
          description: "Duration is mandatory when timed effect is set except for\
            \ no_effect. Resolution decreases for a larger duration. e.g Effects with\
            \ duration smaller than a minute will be rounded to a resolution of 1s,\
            \ while effects with duration larger than an hour will be arounded up\
            \ to a resolution of 300s. Duration has a max of 21600000 ms."
          type: integer
      type: object
    LightLevelGet_allOf_light_light_level_report:
      example:
        light_level: 6
        changed: 2000-01-23T04:56:07.000+00:00
      properties:
        changed:
          description: last time the value of this property is changed.
          format: date-time
          type: string
        light_level:
          description: |
            Light level in 10000*log10(lux) +1 measured by sensor.
            Logarithmic scale used because the human eye adjusts to light levels and small changes at low
            lux levels are more noticeable than at high lux levels.
            This allows use of linear scale configuration sliders.
          type: integer
      type: object
    LightLevelGet_allOf_light:
      example:
        light_level_valid: true
        light_level_report:
          light_level: 6
          changed: 2000-01-23T04:56:07.000+00:00
        light_level: 0
      properties:
        light_level:
          description: Deprecated. Moved to light_level_report/light_level
          type: integer
        light_level_valid:
          description: Deprecated. Indication whether the value presented in light_level
            is valid
          type: boolean
        light_level_report:
          $ref: '#/components/schemas/LightLevelGet_allOf_light_light_level_report'
      type: object
    MotionGet_allOf_motion_motion_report:
      example:
        motion: true
        changed: changed
      properties:
        changed:
          description: last time the value of this property is changed
          type: string
        motion:
          description: true if motion is detected
          type: boolean
      type: object
    MotionGet_allOf_motion:
      example:
        motion: true
        motion_report:
          motion: true
          changed: changed
        motion_valid: true
      properties:
        motion:
          description: Deprecated. Moved to motion_report/motion.
          type: boolean
        motion_valid:
          description: "Deprecated. Motion is valid when motion_report property is\
            \ present, invalid when absent."
          type: boolean
        motion_report:
          $ref: '#/components/schemas/MotionGet_allOf_motion_motion_report'
      type: object
    MotionGet_allOf_sensitivity:
      example:
        sensitivity_max: 6
        sensitivity: 0
        status: set
      properties:
        status:
          enum:
          - set
          - changing
          type: string
        sensitivity:
          description: Sensitivity of the sensor. Value in the range 0 to sensitivity_max
          type: integer
        sensitivity_max:
          description: Maximum value of the sensitivity configuration attribute.
          type: integer
      type: object
    MotionPut_sensitivity:
      example:
        sensitivity: 0
      properties:
        sensitivity:
          description: Sensitivity of the sensor. Value in the range 0 to sensitivity_max.
          type: integer
      type: object
    GroupedLightGet_allOf_alert:
      description: Joined alert control
      example:
        action_values:
        - breathe
        - breathe
      properties:
        action_values:
          items:
            example: breathe
            type: string
          type: array
      type: object
    GroupedLightGet_allOf_signaling:
      description: Feature containing basic signaling properties.
      example:
        signal_values:
        - no_signal
        - no_signal
      properties:
        signal_values:
          description: Signals that the light supports.
          items:
            $ref: '#/components/schemas/SupportedSignals'
          type: array
      type: object
    BridgeGet_allOf_time_zone:
      example:
        time_zone: time_zone
      properties:
        time_zone:
          description: Time zone where the user's home is located (as Olson ID).
          type: string
      type: object
    ActionGet_allOf_action_effects:
      description: Basic feature containing effect properties.
      example:
        effect: prism
      properties:
        effect:
          $ref: '#/components/schemas/SupportedEffects'
      type: object
    ActionGet_allOf_action:
      description: The action to be executed on recall
      example:
        dimming:
          brightness: 73.86281948385884
        effects:
          effect: prism
        color:
          xy:
            x: 0.7061401241503109
            "y": 0.9301444243932576
        color_temperature:
          mirek: 362
        gradient:
          mode: interpolated_palette
          points:
          - xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
          - xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
          - xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
          - xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
          - xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
        "on":
          "on": true
      properties:
        "on":
          $ref: '#/components/schemas/On'
        dimming:
          $ref: '#/components/schemas/Dimming'
        color:
          $ref: '#/components/schemas/Color'
        color_temperature:
          $ref: '#/components/schemas/ColorTemperature'
        gradient:
          $ref: '#/components/schemas/Gradient'
        effects:
          $ref: '#/components/schemas/ActionGet_allOf_action_effects'
      type: object
    ColorTemperaturePalettePost_color_temperature:
      example:
        mirek: 180
      properties:
        mirek:
          description: color temperature in mirek or null when the light color is
            not in the ct spectrum
          maximum: 500
          minimum: 153
          type: integer
      type: object
    ScenePalette_effects_inner:
      example:
        effect: null
      properties:
        effect:
          $ref: '#/components/schemas/SupportedEffects'
      type: object
    SceneGet_allOf_status:
      example:
        active: inactive
      properties:
        active:
          enum:
          - inactive
          - static
          - dynamic_palette
          type: string
      type: object
    ActionPost_action:
      description: The action to be executed on recall
      example:
        dimming:
          brightness: 73.86281948385884
        effects:
          effect: prism
        dynamics:
          duration: 0
        color:
          xy:
            x: 0.7061401241503109
            "y": 0.9301444243932576
        color_temperature:
          mirek: 180
        gradient:
          mode: interpolated_palette
          points:
          - xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
          - xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
          - xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
          - xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
          - xy:
              x: 0.7061401241503109
              "y": 0.9301444243932576
        "on":
          "on": true
      properties:
        "on":
          $ref: '#/components/schemas/On'
        dimming:
          $ref: '#/components/schemas/Dimming'
        color:
          $ref: '#/components/schemas/Color'
        color_temperature:
          $ref: '#/components/schemas/ColorTemperaturePalettePost_color_temperature'
        gradient:
          $ref: '#/components/schemas/Gradient'
        effects:
          $ref: '#/components/schemas/ActionGet_allOf_action_effects'
        dynamics:
          $ref: '#/components/schemas/Dynamics-2'
      type: object
    RoomGet_allOf_metadata:
      description: configuration object for a room
      example:
        archetype: living_room
        name: name
      properties:
        name:
          description: Human readable name of a resource
          type: string
        archetype:
          $ref: '#/components/schemas/RoomArchetype'
      type: object
    TemperatureGet_allOf_temperature_temperature_report:
      example:
        temperature: 23
        changed: 2000-01-23T04:56:07.000+00:00
      properties:
        changed:
          description: last time the value of this property is changed.
          format: date-time
          type: string
        temperature:
          description: Temperature in 1.00 degrees Celsius
          example: 23
          type: number
      type: object
    TemperatureGet_allOf_temperature:
      example:
        temperature_valid: true
        temperature: 23
        temperature_report:
          temperature: 23
          changed: 2000-01-23T04:56:07.000+00:00
      properties:
        temperature:
          description: Deprecated. Moved to Temperature_report/temperature
          example: 23
          type: number
        temperature_valid:
          description: Deprecated. Indication whether the value presented in temperature
            is valid
          type: boolean
        temperature_report:
          $ref: '#/components/schemas/TemperatureGet_allOf_temperature_temperature_report'
      type: object
  securitySchemes:
    HueApplicationKey:
      in: header
      name: hue-application-key
      type: apiKey

